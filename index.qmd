---
title: Retrospective clinical data harmonisation reporting
author: Jeremy Selva [`r fontawesome::fa(name = "linkedin", fill = "#0077ac")`](https://www.linkedin.com/in/jeremy-selva-085b9112a/){target="_blank"} <br> @JauntyJJS [`r fontawesome::fa(name = "github", fill = "#000000")`](https://github.com/JauntyJJS){target="_blank"} [`r fontawesome::fa(name = "fab fa-square-x-twitter", fill = "#000000")`](https://twitter.com/JauntyJJS){target="_blank"} [`r fontawesome::fa(name = "bluesky", fill = "#1084ff")`](https://bsky.app/profile/jauntyjjs.bsky.social){target="_blank"} [<svg aria-hidden="true" role="img" viewBox="0 0 512 512" style="height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:#5f53e7;overflow:visible;position:relative;"><path d="M433 179.1c0-97.2-63.7-125.7-63.7-125.7-62.5-28.7-228.6-28.4-290.5 0 0 0-63.7 28.5-63.7 125.7 0 115.7-6.6 259.4 105.6 289.1 40.5 10.7 75.3 13 103.3 11.4 50.8-2.8 79.3-18.1 79.3-18.1l-1.7-36.9s-36.3 11.4-77.1 10.1c-40.4-1.4-83-4.4-89.6-54a102.5 102.5 0 0 1 -.9-13.9c85.6 20.9 158.7 9.1 178.8 6.7 56.1-6.7 105-41.3 111.2-72.9 9.8-49.8 9-121.5 9-121.5zm-75.1 125.2h-46.6v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.3V197c0-58.5-64-56.6-64-6.9v114.2H90.2c0-122.1-5.2-147.9 18.4-175 25.9-28.9 79.8-30.8 103.8 6.1l11.6 19.5 11.6-19.5c24.1-37.1 78.1-34.8 103.8-6.1 23.7 27.3 18.4 53 18.4 175z"/></svg>](https://fosstodon.org/@JauntyJJS){target="_blank"} <br> [*https://jeremy-selva.netlify.app* `r fontawesome::fa(name = "link", fill = "#666666")`](https://jeremy-selva.netlify.app/){target="_blank"} <br> For [R/Medicine 2025 `r fontawesome::fa(name = "link", fill = "#666666")`](https://rconsortium.github.io/RMedicine_website/){target="_blank"}
date: 2025-06-12
date-format: "D[<sup style='font-size:65%;font-style:italic;'>th</sup>] MMMM YYYY"
format:
  revealjs:
    theme: [custom.scss]
    mainfont: "Lato"
    code-line-numbers: true
    code-annotations: false
    code-overflow: scroll
    controls: true
    progress: true
    #slide-number: true # slide number determined be no_logo_at_title_slide.js
    scrollable: true
    transition: fade
    background-transition: fade
    highlight-style: breeze
    # logo: images/qr.png
    pointer:
      pointerSize: 24
      color: '#32cd32'
    include-after-body: no_logo_at_title_slide.js
    # include-in-header: 
    #   text: |
    #     <meta name="github-repo" content="JauntyJJS/rugs_20241129" />
    #     <meta name="twitter:title" content="Introduction to Quarto Dashboards" />
    #     <meta name="twitter:description" content="Presentation for R User Group Singapore Meetup on 29 November 2024." />
    #     <meta name="twitter:url" content="https://jauntyjjs.github.io/rugs_20241129" />
    #     <meta name="twitter:image" content="https://raw.githubusercontent.com/JauntyJJS/rugs_20241129/main/share-card.png" />
    #     <meta name="twitter:image:alt" content="Title slide of Introduction to Quarto Dashboards presented at R User Group Singapore Meetup on 29 November 2024." />
    #     <meta name="twitter:card" content="summary_large_image" />
    #     <meta name="twitter:creator" content="@JauntyJJS" />
    #     <meta name="twitter:site" content="@JauntyJJS" />
    #     <meta property="og:title" content="Introduction to Quarto Dashboards" />
    #     <meta property="og:description" content="Presentation for R User Group Singapore Meetup on 29 November 2024." />
    #     <meta property="og:url" content="https://jauntyjjs.github.io/rugs_20241129" />
    #     <meta property="og:image" content="https://raw.githubusercontent.com/JauntyJJS/rugs_20241129/main/share-card.png" />
    #     <meta property="og:image:alt" content="Title slide of Introduction to Quarto Dashboards presented at R User Group Singapore Meetup on 29 November 2024." />
    #     <meta property="og:site_name" content="R User Group Singapore Meetup on 29 November 2024" />
    #     <meta property="og:type" content="website" />
    #     <meta property="og:locale" content="en_UK" />
    #     <meta property="article:author" content="Jeremy Selva" />
revealjs-plugins:
  - pointer
filters:
  - code-fullscreen
params:
  show_table: TRUE
---

```{r}
#| label: for presentation
#| include: false

library(fontawesome)
library(knitr)
library(yaml)
library(rmarkdown)

out_type <- knitr::opts_chunk$get("rmarkdown.pandoc.to")
```

```{r}
#| label: for harmonisation
#| include: false
#| echo: false

library(magrittr)
library(here)
library(testthat)
library(readxl)
library(vroom)
library(pointblank)

```

## Outline

Data harmonisation overview strategy

Cover ways to counter small but annoying issues during retrospective data harmonisation.

Suggested reports and diagrams to create for different clients.

## Automated capture of warnings (csv)

When reading files in batches or the same file but in a different version. Is there an automated way to catch warnings/issues when reading csv ?

:::: {.columns}

::: {.column width="50%"}

```{r}
#| label: read data with warnings csv
#| echo: true
#| warning: true

cohort_data_csv <- vroom::vroom(
  file = here::here("data-raw", "Cohort_csv", 
    "data_to_harmonise_age_issue.csv"),
  delim = ",",
  col_select = 1:2,
  show_col_types = FALSE,
  col_types = list(ID = vroom::col_character(), Age = vroom::col_integer())
  )

head(cohort_data_csv, n = 3)

```

:::

::: {.column width="50%"}

An image here

:::

::::

## Automated capture of warnings (csv)

If there are issues with the data, the output of `vroom::problems` will be a tibble.

```{r}
#| label: view problem in vroom
#| echo: true
#| warning: true

cohort_data_csv |> 
  vroom::problems()

```

To check for this in an automatically, we can use `pointblank::expect_row_count_match`.

```{r}
#| label: safeguard problem with vroom and pointblank
#| echo: true
#| error: true

cohort_data_csv |> 
  vroom::problems() |> 
  pointblank::expect_row_count_match(count = 0)

```

## Automated capture of warnings (Excel)

Is there an automated way to catch warnings/issues when reading Excel ?

::: {.column width="50%"}

```{r}
#| label: read data with warnings Excel
#| echo: true
#| warning: true

cohort_data_excel <- readxl::read_excel(
  path = here::here("data-raw", "Cohort_Excel", 
    "data_to_harmonise_age_issue.xlsx"),
  sheet = "Sheet1",
  col_types = c(
    "text", "numeric"
    )
  )
```

:::

## Automated capture of warnings (Excel)

We can read the new file in the following way.

```{r}
#| label: read data with issues using testthat
#| echo: true
#| error: true

testthat::expect_no_condition(
  cohort_data_excel <- readxl::read_excel(
    path = here::here("data-raw", "Cohort_Excel", 
      "data_to_harmonise_age_issue.xlsx"),
    sheet = "Sheet1",
    col_types = c("text", "numeric")
  )
)
```

However, this method means that you will lose the pipe workflow.

```{r}
#| label: read data without issues using testthat
#| echo: true

testthat::expect_no_condition(
  cohort_data_excel_2 <- readxl::read_excel(
    path = here::here("data-raw", "Cohort_Excel", 
      "data_to_harmonise_age_issue_fixed.xlsx"),
    sheet = "Sheet1",
    col_types = c("text", "numeric")
  )
)

cohort_data_excel_2 <- cohort_data_excel_2 |> 
# Check if Serial Number is unique
  pointblank::rows_distinct(
    columns = "Serial Number",
  )
```

## Automated capture of warnings (Excel)

We can use the tee pipe operator `%T>%`.

```{r}
#| label: read data with issues using testthat and tee pipe
#| echo: true
#| error: true

cohort_data_excel <- readxl::read_excel(
  path = here::here("data-raw", "Cohort_Excel", 
    "data_to_harmonise_age_issue.xlsx"),
  sheet = "Sheet1",
  col_types = c(
    "text", "numeric"
    )
  ) %T>%
  testthat::expect_no_condition()
```

```{r}
#| label: read data without issues using testthat and tee pipe
#| echo: true

cohort_data_excel_2 <- readxl::read_excel(
  path = here::here("data-raw", "Cohort_Excel", 
    "data_to_harmonise_age_issue_fixed.xlsx"),
  sheet = "Sheet1",
  col_types = c("text", "numeric")
) %T>%
testthat::expect_no_condition() |> 
# Check if Serial Number is unique
  pointblank::rows_distinct(
    columns = "Serial Number",
)

```
